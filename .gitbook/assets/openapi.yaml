{
  "openapi": "3.0.0",
  "info":
    {
      "title": "SFS MS Admin API",
      "description": "API for Symphony Federation Services (SFS) MicroService (MS) Admin\\\nThis API provides enpoints mananging different aspects of the WECHAT, WHATSAPP and SMS federated services, referred below as the \"external networks\"\n# Authentication\n**RSA public key registration**\\\nPrior to any calls, a customer needs to provide (at least) one pem-encoded public key, associated with a name that will identify this key on the Connect platform (WECHAT or WHATSAPP or SMS). These two pieces of information will enable the customer to generate a Java Web Token (JWT) required with all calls to the Connect platform API endpoints.\\\nFor more information on this authentication mechanism and the key pair format, please refer to this documentation: https://developers.symphony.com/restapi/docs/rsa-bot-authentication-workflow#create-a-rsa-key-pair:\n\\\nFor convenience, here is the sequence to create a RSA key pair:\n```\ncert_prefix=\"my-rsa-pair\"\nopenssl genrsa -out \"${cert_prefix}_privatekey.pem\" 4096\nopenssl req -newkey rsa:$bitlength -x509 -key \"${cert_prefix}_privatekey.pem\" -out \"${cert_prefix}_publickey.cer\"\nopenssl pkcs8 -topk8 -nocrypt -in \"${cert_prefix}_privatekey.pem\" -out \"${cert_prefix}_privatekey.pkcs8\"\nopenssl x509 -pubkey -noout -in \"${cert_prefix}_publickey.cer\"  > \"${cert_prefix}_publickey.pem\"\n```\nFor security reasons, the private key MUST NOT be shared. Symphony employees will not be asking for the private key.\\\nShould you need to revoke the key or should you have lost it, you can request its removal or replacement by opening a ticket with Symphony support.\\\n\\\n\\\n**API calls authentication**\\\nThe JWT must be provided by the caller as a **Bearer Token** in the **Authorization** header of each HTTP request (https://swagger.io/docs/specification/authentication/bearer-authentication)\n```\nAuthorization: Bearer <jwt token>\n```\nThe Connect platform requires the JWT token to include this specific information:\n\n  |                   | JWT claim name | Description |\n  | ------------------| -------------- | ------------|\n  | Subject           | sub            | The subject must follow format ces:customer:public_key_name where public_key_name is the name of the public key registered in Connect platform system|\n  | Issued At         | iat            | The creation date of the token, following the RFC7519 format|\n  | Expiration date   | exp            | The expiration date of the token, following the RFC7519 format. This must be at most equal to iat + 30 minutes.|\n  | JWT ID            | jti            | A unique ID for your JWT (e.g., a random UUID)|\n\n\nHere is a Java example using *io.jsonwebtoken:jjwt* library (https://github.com/jwtk/jjwt - Connect to preview). This library is a dependency of the Symphony SDK, meaning that if you are setup to work with Symphony APIs, you do not require any additional library.\n```\npublic static String generate(PrivateKey privateKey, String publicKeyName) {\n  return Jwts.builder()\n    .setSubject(\"ces:customer:\" + publicKeyName)\n    .setId(UUID.randomUUID().toString())\n    .setIssuedAt(Date.from(now.toInstant()))\n    .setExpiration(Date.from(now.plusMinutes(30).toInstant()))\n    .signWith(SignatureAlgorithm.RS512, privateKey)\n    .compact();\n}\n```\nExample of an API call using Curl\n```\ncurl --location --request GET 'https://connect.dev.symphony.com/admin/api/v1/customer/permissions' \\\n                --header 'Authorization: Bearer eyJhbGciOiJSU....42sMd9soxkrnn7et44OM'\n```\n# Permissions\nAs of release 21.03, the available permissions are\n\n  |    WECHAT PERMISSION          |   WHATSAPP PERMISSION       |  SMS PERMISSION            |  Description                 |\n  |-------------------------------|-----------------------------|----------------------------|------------------------------|\n  |  create:im                    |   -                         |  -                         | All conversations for the permissioned Advisor will occur as IM only |\n  |  create:room                  |   create:room               |  create:room               | Required to create a room. It also allows the user to use the Rooms tab to manage rooms: create a room, deactivate a room, add members, remove members, transfer room ownership. If the user doesn’t have the create:room permission, the ‘New room’ button is not displayed. (All users have access to the Rooms tab, even if they do not have the create:room permission.) |\n  |  create:contact               |   create:contact            |  create:contact            | Required to create a contact via the Contacts tab. If the user doesn’t have the create:contact permission, the ‘New contact’ button is not displayed on the Contacts tab. (All users have access to the Contacts tab, even if they do not have the create:contact permission.) Users without the create:contact permission will have contacts created each time they are added to rooms with new contacts. Also required (along with Admin:list-customers and on-behalf:onboard) to add new advisor connections to a client from the Admin tab. |\n  |  on-behalf:onboard            |   on-behalf:onboard         |  on-behalf:onboard         | Enables the user to onboard contacts on behalf of other users. Also required (along with Admin:list-customers) to add a connection to a contact via the Admin tab. |\n  |  -                            |   edit:contact              |  edit:contact              | Required to edit a contact via the Contacts tab. If the user doesn’t have the edit:contact permission, the ‘Edit contact’ option is not displayed in the Contacts tab. A contact’s first and last name cannot be edited if the contact has already been added to WhatsApp Connect by another user. Company name cannot be edited if the contact is already a participant in a chat room. Email address and telephone number cannot be edited. Also required (along with Admin:list-customers and on-behalf:onboard) to edit client contact details from the Admin tab. |\n  |  -                            |   delete:contact            |  delete:contact            | Required to delete a contact via the Contacts tab. If the user doesn’t have the delete:contact permission, the ‘Remove contact’ option is not displayed in the Contact tab. This permission is not required to delete a contact in the Admin tab. |\n  |  on-behalf:simple-offboard    |   on-behalf:simple-offboard |  on-behalf:simple-offboard | Required to off-board a contact or to remove a connection from a user via the Admin tab (along with Admin:list-customers). This permission is *not* required to remove a contact via the Contact tab. |\n  |  admin:list-customers         |   admin:list-customers      |  admin:list-customers      | Gives the user access to the Admin tab, which displays all contacts onboarded for the current tenant and allows the user to add a contact to an existing room, view rooms a contact is part of, and view a given contact’s advisor connections. Additional permissions required for additional functionalities on the Admin tab:<ul><li> To offboard a contact or remove a connection from an advisor via the Admin tab, the user requires the On-behalf:simple-offboard permission in addition to the Admin:list-customers.<li> To create new contacts on behalf of advisors from the Admin tab, the user requires both the Create:contact and the On-behalf:onboard permissions.<li> To edit contact details, the user requires both Edit:contact and On-behalf:onboard</ul>|\n  |  add:multi-company-contact    |   add:multi-company-contact |  add:multi-company-contact | Allows the user to participate in a room with contacts from different companies. Requires create:room permission. |\n\n**Notes:**\\\n  <ul>\n    <li> By default, when an Advisor is entitled, they are assigned the following permissions:  create:room , create:contact, edit:contact, delete:contact, on-behalf:onboard.</li>\n    <li> for Multi-company-contacts, the contacts must be from the same network, e.g. all from WeChat or all from WhatsApp. Cross network rooms are not authorized.</li>\n  </ul>\n\n# APIs path\nFor all the APIs, CONNECT-DOMAIN refers to the domain name for the WECHAT or WHATSAPP or SMS platforms.\\\nProduction CONNECT-DOMAIN:\n<ul>\n    <li>WECHAT:     https://wcgw.symphony.com/ </li>\n    <li>WHATSAPP:   https://connect.symphony.com/</li>\n    <li>SMS:        https://connect.symphony.com/</li>\n</ul>\n\nfor reference here are the TEST CONNECT-Domain:\n<ul>\n    <li>WECHAT:     https://wcgw-uat.symphony.com/ </li>\n    <li>WHATSAPP:   https://connect.uat.symphony.com/</li>\n    <li>SMS:        https://connect.uat.symphony.com/</li>\n</ul>\n\nIn addition, the following should be added after the domain:\n<ul>\n    <li> For WECHAT:   /wechatgateway </li>\n    <li> For WHATSAPP: /admin </li>\n    <li> For SMS:      /admin </li>\n    <li> For example, the request to get the list of available entitlements would be (headers have been omitted in this example): </li>\n    <ul>\n        <li>WECHAT:    curl -X GET   \"https://wcgw.symphony.com/wechatgateway/api/v2/customer/entitlements\" </li>\n        <li>WHATSAPP:  curl -X GET \"https://connect.symphony.com/admin/api/v2/customer/entitlements\" </li>\n        <li>SMS:       curl -X GET \"https://connect.symphony.com/admin/api/v2/customer/entitlements\" </li>\n    </ul>\n</ul>\n\n# Contact profile limitation\n<ul>\n    <li>For a given phone number, the email address of a contact across all tenants must be the same.<br />\n        This means that if Tenant onboards a contact with phone number +86 1234567890 and email address contactABC@someDomain.tld (it's the 1st time this contact is onboarded on the platform), when another tenant wishes to onboard a contact with phone number +86 1234567890 the email to be provided must also be contactABC@someDomain.tld or an error will be returned (usually 409: \\\"Conflict\\\" or \\\"Contact already exists\\\" / \\\"Contact already onboarded)\\\"</li>\n    <li>The firstName and lastName entered for that contact (+86 1234567890) must also match the existing contact on record for a </li>\n    <li>A contact's company name has a maximum length of 25 characters</li>\n</ul>",
      "version": "0.0.1",
    },
  "servers": [{ "url": "https://CONNECT-DOMAIN" }],
  "tags":
    [
      {
        "name": "Entitlements",
        "description": "This API provides endpoints to add or remove Advisors entitlements. <br/> Entitlements allow an advisor to use an external network such as WECHAT or WHATSAPP or SMS.",
      },
      {
        "name": "Contact",
        "description": "This API provides endpoints to manage Contacts. A Contact is a client of the WECHAT or WHATSAPP or SMS network (also referred as external network). Advisor, a user of the Symphony connect platform. A contact represents the relation between an external user (a Whatsapp or Wechat user), and an advisor.<br /> When an advisor onboards, or adds an external user, they become one of their contacts",
      },
      {
        "name": "Permissions",
        "description": 'An API for managing permissions. Permissions give an advisor the ability to perform certain actions, for example creating a room.<br/> <b>Note:</b> Permissions are more specific than entitlements.<br/> An entitlement gives an advisor the right to use an external network (for example, Wechat) whereas a permission gives access to a specific functionality within that external network. An entitlement is a precondiction for a permission. <br /> If you want to grant the permission "create:room" to an advisor on WhatsApp, the advisor must have the WHATSAPP entitlement.',
      },
    ],
  "paths":
    {
      "/api/v2/customer/entitlements":
        {
          "get":
            {
              "tags": ["Entitlements"],
              "summary": "List entitlements (recommended)",
              "description": "List the available entitlements.\n",
              "operationId": "listEntitlements",
              "responses":
                {
                  "200":
                    {
                      "description": "List of found entitlements",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlements-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "tags": ["Entitlements"],
              "summary": "Add entitlement (recommended)",
              "description": "Entitle a Symphony user to use the external network.",
              "operationId": "addEntitlement",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/entitlement-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "The user has successfully been added in the list of entitlements",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed input",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Add user forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/forbidden-entitlement-type",
                                      },
                                      {
                                        "$ref": "#/components/schemas/Forbidden",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/tenant-configuration-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/entitlements/externalNetwork/{externalNetwork}/advisors"
      : {
          "get":
            {
              "tags": ["Entitlements"],
              "summary": "List entitled advisors",
              "description": "List all entitled advisors on a given external network.\n",
              "operationId": "listEntitledAdvisors",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "required": true,
                    "description": "External Network: WECHAT or WHATSAPP or SMS",
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                  {
                    "name": "before",
                    "in": "query",
                    "description": "The before cursor for pagination",
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "after",
                    "in": "query",
                    "description": "The after cursor for pagination",
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of found entitled advisors.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitled-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/advisor/entitlements":
        {
          "get":
            {
              "tags": ["Entitlements"],
              "summary": "Get an advisor's entitlement (recommended)",
              "description": "Check if a given advisor is entitled for a given external network. <br/>\nAdvisor can be identified using its email address or its Symphony user Id\n(if both are provided Symphony user id will take precedence)\n",
              "operationId": "getCustomerEntitlement",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "query",
                    "description": "Symphony User Email Address",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "advisorSymphonyId",
                    "in": "query",
                    "description": "Symphony User Id",
                    "required": false,
                    "schema": { "type": "string", "example": 12345678912365 },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "External Network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Advisor data (if an entitled advisor has been found)",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Entitlement not found (If no entitled advisor matching the parameters has been found)",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-not-found-problem",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "delete":
            {
              "tags": ["Entitlements"],
              "summary": "Remove entitlement (recommended)",
              "description": "Removes a given advisor's entitlement for a given external network. <br/>\nThe Advisor can be identified using its email address or its Symphony UserId\n(if both are provided Symphony UserId will take precedence)\n",
              "operationId": "deleteCustomerEntitlement",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "query",
                    "description": "Advisor's Email Address",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "advisorSymphonyId",
                    "in": "query",
                    "description": "Symphony UserId",
                    "required": false,
                    "schema": { "type": "string", "example": 12345678912365 },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "The entitlement has been successfully removed",
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Entitlement not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-not-found-problem",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/entitlements/{symphonyId}/entitlementType/{entitlementType}"
      : {
          "get":
            {
              "deprecated": true,
              "tags": ["Entitlements"],
              "summary": "Get an Advisor's entitlement searching by Symphony UserId for a given external network (deprecated)",
              "description": "Get an Advisor's entitlement searching by Symphony UserId for a given external network\n",
              "operationId": "getCustomerEntitlementBySymphonyId",
              "parameters":
                [
                  {
                    "name": "symphonyId",
                    "in": "path",
                    "description": "Symphony UserId",
                    "required": true,
                    "schema": { "type": "string", "example": 12345678912365 },
                  },
                  {
                    "name": "entitlementType",
                    "in": "path",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Found entitlement",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Entitlement not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-not-found-problem",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "delete":
            {
              "deprecated": true,
              "tags": ["Entitlements"],
              "summary": "Remove an Advisor's entitlement by Symphony Userid for a given external network (deprecated)",
              "description": "Remove an Advisor's entitlement for a given external network\n",
              "operationId": "deleteCustomerEntitlementBySymphonyId",
              "parameters":
                [
                  {
                    "name": "symphonyId",
                    "in": "path",
                    "description": "Symphony id",
                    "required": true,
                    "schema": { "type": "string", "example": 12345678912365 },
                  },
                  {
                    "name": "entitlementType",
                    "in": "path",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "204":
                    {
                      "description": "The entitlement has been successfully removed",
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Entitlement not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-not-found-problem",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v2/customer/contacts/{contactSymphonyId}/advisor/{advisorSymphonyId}"
      : {
          "delete":
            {
              "tags": ["Contact"],
              "summary": "Remove contact (recommended)",
              "description": "Remove an Advisor's Contact searching by the Advisor's Symphony id and Contact's Symphony id\n",
              "operationId": "deleteContactv2",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                  {
                    "name": "contactSymphonyId",
                    "in": "path",
                    "description": "Contact's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Contact removed succesfully" },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/contacts/advisorEmailAddress/{advisorEmailAddress}/contactEmailAddress/{contactEmailAddress}/externalNetwork/{externalNetwork}"
      : {
          "delete":
            {
              "deprecated": true,
              "tags": ["Contact"],
              "summary": "Remove an Advisor's Contact (deprecated)",
              "description": "Remove an Advisor's Contact searching by the Advisor's email address and Contact's email address for a given external network\n",
              "operationId": "deleteContact",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "contactEmailAddress",
                    "in": "path",
                    "description": "Contact's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Contact removed succesfully" },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/contacts/{contactSymphonyId}":
        {
          "delete":
            {
              "tags": ["Contact"],
              "summary": "Remove the Contact from all Advisors he/she is connected to for a given external network (recommended)",
              "description": "Remove the contact from all advisors s/he is connected to for a given external network.\n",
              "operationId": "deleteContactsByEmailAndExtrenalNetworkv2",
              "parameters":
                [
                  {
                    "name": "contactSymphonyId",
                    "in": "path",
                    "description": "Contact's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Contact found. The response includes a status report (SUCCESS or FAILURE) of the connection removal for each Advisors initially connected to the Contact.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/customer-contactsWithId-responsev2",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbbiden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "put":
            {
              "tags": ["Contact"],
              "summary": "Update Contact (recommended)",
              "description": "Update contact first name, last name, company name (maximum 25 characters) for a given external network. <br />\n<b>Note:</b> Update of contact's email address or phone number not supported.\n",
              "operationId": "updateContactsv2",
              "parameters":
                [
                  {
                    "name": "contactSymphonyId",
                    "in": "path",
                    "description": "Contact's Symphony id",
                    "required": true,
                    "schema": { "type": "string", "example": 1234567890 },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/customer-update-contacts-requestv2",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Contact successfully updated",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/update-contacts-response-v2",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed input",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/external-network-not-found",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Update User forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_1",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_4",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Contact update failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/update-account-failed",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/contacts/contactEmailAddress/{contactEmailAddress}/externalNetwork/{externalNetwork}"
      : {
          "delete":
            {
              "deprecated": true,
              "tags": ["Contact"],
              "summary": "Remove the Contact from all Advisors he/she is connected to for a given external network (deprecated)",
              "description": "Removes the Contact from all Advisors he/she is connected to, searching by the Contact's email address and the external network. This operation will only affect the Tenant's Advisors.\n",
              "operationId": "deleteContactsByEmailAndExtrenalNetwork",
              "parameters":
                [
                  {
                    "name": "contactEmailAddress",
                    "in": "path",
                    "description": "Contact email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Contact found. The response includes a status report (SUCCESS or FAILURE) of the connection removal for each Advisors initially connected to the Contact.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/customer-contactsWithId-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbbiden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/contacts/removal":
        {
          "post":
            {
              "tags": ["Contact"],
              "summary": "Bulk remove advisor-contact connection (recommended)",
              "description": "Removes specific advisor-contact connection in bulk.\n",
              "operationId": "deleteContactsv2",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/deleteContacts-requestv2",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Contacts found. The response includes a status report (SUCCESS, NOT_FOUND or FAILURE) of the connection removal for each Advisors initially connected to each Contact in the array of objects.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/deleteContacts-responsev2",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbbiden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/contacts/removal":
        {
          "post":
            {
              "deprecated": true,
              "tags": ["Contact"],
              "summary": "Remove specific Advisor-Contact connection in bulk (deprecated)",
              "description": "Bulk remove the connection between pairs of Advisor and Contact. Takes in the body of the request an array of objects composed of Advisor email address, Contact email address and external network.\n",
              "operationId": "deleteContacts",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/deleteContacts-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Contacts found. The response includes a status report (SUCCESS or FAILURE) of the connection removal for each Advisors initially connected to each Contact in the array of objects.",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/deleteContacts-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbbiden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/contacts/advisor/{advisorSymphonyId}":
        {
          "delete":
            {
              "tags": ["Contact"],
              "summary": "Remove all contacts (recommended)",
              "description": "Removes all Contacts of an Advisor matching the Advisor's Symphony UserId\n",
              "operationId": "deleteAdvisorContactsv2",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Call completed - Report provided with the list of SUCCESSFUL and FAILED operation",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/customer-deleteAdvisorContacts-responsev2",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor or Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_1",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/contacts/advisorEmailAddress/{advisorEmailAddress}":
        {
          "delete":
            {
              "deprecated": true,
              "tags": ["Contact"],
              "summary": "Removes all Contacts of a given Advisor (deprecated)",
              "description": "Removes all Contacts of an Advisor matching the Advisor's email address\n",
              "operationId": "deleteAdvisorContacts",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "william.smith@symphony.com",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Call completed - Report provided with the list of SUCCESSFUL and FAILED operation",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/deleteContacts-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor or Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_1",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/permissions":
        {
          "get":
            {
              "tags": ["Permissions"],
              "summary": "List permissions",
              "description": "List of available permissions for the external network at \"CONNECT-DOMAIN\"<br />\n",
              "operationId": "listPermissions",
              "responses":
                {
                  "200":
                    {
                      "description": "List of permissions found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/permissions-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v2/customer/advisors/{advisorSymphonyId}/externalNetwork/{externalNetwork}/permissions"
      : {
          "get":
            {
              "tags": ["Permissions"],
              "summary": "List advisor's permissions (recommended)",
              "description": "List the permissions granted to an advisor on an external network.<br />\n",
              "operationId": "listAdvisorPermissionsBySymphonyId",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema": { "type": "string", "example": 1234567890 },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of advisor's permissions",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-permissions-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "tags": ["Permissions"],
              "summary": "Add permission to an advisor (recommended)",
              "description": "Grant permission to an advisor. \\\nRefer to the top of this page, Permission table, to consult the default permissions. \\\nFor Multi-company-contacts, the contacts must be from the same network, e.g. all from WeChat or all from WhatsApp. Cross network rooms are not authorized.</li>\n",
              "operationId": "addPermissionBySymphonyId",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema": { "type": "string", "example": 1234567890 },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network.",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/advisor-permission-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Permission sucessfully added to the advisor",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-permission-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_2",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/permission-already-assigned",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/advisors/advisorEmailAddress/{advisorEmailAddress}/externalNetwork/{externalNetwork}/permissions"
      : {
          "get":
            {
              "deprecated": true,
              "tags": ["Permissions"],
              "summary": "List advisor's permissions (deprecated)",
              "description": "List advisor's Permissions<br />\n",
              "operationId": "listAdvisorPermissionsByEmail",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of advisor's permissions",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-permissions-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "deprecated": true,
              "tags": ["Permissions"],
              "summary": "Add permission to an advisor (deprecated)",
              "description": "Grant permission to an advisor. \\\nRefer to the top of this page, Permission table, to consult the default permissions. \\\nFor Multi-company-contacts, the contacts must be from the same network, e.g. all from WeChat or all from WhatsApp. Cross network rooms are not authorized.</li>\n",
              "operationId": "addPermissionByEmail",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network.",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/advisor-permission-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Permission sucessfully added to the advisor",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisor-permission-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_2",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/permission-already-assigned",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v2/customer/advisors/{advisorSymphonyId}/externalNetwork/{externalNetwork}/permissions/{permissionName}"
      : {
          "delete":
            {
              "tags": ["Permissions"],
              "summary": "Remove permission (recommended)",
              "description": "Remove a permission from an advisor.",
              "operationId": "removePermissionBySymphonyIdv2",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network.",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "permissionName",
                    "in": "path",
                    "description": "permissionName to remove",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Permission successfull removed" },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_3",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/advisors/advisorEmailAddress/{advisorEmailAddress}/externalNetwork/{externalNetwork}/permissions/{permissionName}"
      : {
          "delete":
            {
              "deprecated": true,
              "tags": ["Permissions"],
              "summary": "Remove Permission from an Advisor (deprecated)",
              "description": "Remove Permission from an Advisor",
              "operationId": "removePermissionByEmail",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network.",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "permissionName",
                    "in": "path",
                    "description": "permissionName to remove",
                    "required": true,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "204": { "description": "Permission successfull removed" },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_3",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/advisors/permissions":
        {
          "post":
            {
              "tags": ["Permissions"],
              "summary": "Add permission to multiple advisors (recommended)",
              "description": "Grant permission to multiple advisors.",
              "operationId": "addPermissionToMultipleAdvisor",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/advisors-permission-requestv2",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Permission sucessfully added to the advisor",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/multiple-advisor-permission-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_2",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/permission-already-assigned",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/advisors/permissions":
        {
          "post":
            {
              "deprecated": true,
              "tags": ["Permissions"],
              "summary": "Add permission to multiple advisors (deprecated)",
              "description": "Add a permission to multiple advisors.",
              "operationId": "addPermissionToMultipleAdvisorByEmail",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/advisors-permission-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Permission sucessfully added to the advisor",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/multiple-advisor-permission-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_2",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/permission-already-assigned",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/contacts":
        {
          "post":
            {
              "tags": ["Contact"],
              "summary": "Add a Contact and/or Advisors to a Contact (recommended)",
              "description": "Add a contact and/or advisor(s) to the contact.<br/>\nThis end point can be called in 2 situations:<br/>\n<ol>\n  <li>to create a contact and eventually immediately associate one or more advisor</li>\n  <li>to add more advisors to an existing contact.</li>\n</ol>\nIn both cases you must provide all the contact's mandatory fields listed as \"body params\".<br/>\n\n**Note** <br/>\n<ul>\n<!-- <li>to be checked A maximum of 25 advisorSymphonyId or advisorEmailAddress can be passed in on call </li> -->\n  <li>If both advisorSymphonyId and advisorEmailAddresses are passed, the advisorSymphonyId will prevail </li>\n</ul>\n",
              "operationId": "addContact",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/customer-contact-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Contact successfully added",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/add-contact-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed input",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400_1",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Onboard User forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/tenant-configuration-not-found",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_409",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "User creation failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/create-account-failed",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "get":
            {
              "tags": ["Search"],
              "summary": "List contacts (recommended)",
              "description": "List contacts, can query by emailAddress, phoneNumber or SymphonyId\n",
              "operationId": "listContacts2",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "emailAddress",
                    "in": "query",
                    "description": "The Contact's email address",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                  {
                    "name": "phoneNumber",
                    "in": "query",
                    "description": "The Contact's phone number",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "format": "phone",
                        "example": "+33 1 23 45 67 89",
                      },
                  },
                  {
                    "name": "symphonyId",
                    "in": "query",
                    "description": "The Contact's Symphony id",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "pattern": "^\\d+$",
                        "example": 1234567890,
                      },
                  },
                  {
                    "name": "before",
                    "in": "query",
                    "description": "The before cursor for pagination",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "after",
                    "in": "query",
                    "description": "The after cursor for pagination",
                    "required": false,
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Contact found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/list-contact-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/contacts":
        {
          "get":
            {
              "deprecated": true,
              "tags": ["Search"],
              "summary": "Find a Contact (deprecated)",
              "description": "Find a Contact searching by email address and external network<br />\n",
              "operationId": "findContacts",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "emailAddress",
                    "in": "query",
                    "description": "The Contact's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Contact found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/find-contact-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contact-not-found",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/contacts/{contactEmailAddress}/update":
        {
          "post":
            {
              "deprecated": true,
              "tags": ["Contact"],
              "summary": "Update Contact (deprecated)",
              "description": "Update the first name, last name, company name (Maximum 25 characters long) of a Contact for a given external network.\n <br/> Update of the Contact's email address or phone number is not supported.\n",
              "operationId": "updateContacts",
              "parameters":
                [
                  {
                    "name": "contactEmailAddress",
                    "in": "path",
                    "description": "Contact's email address",
                    "required": true,
                    "schema":
                      { "type": "string", "example": "johndoe@symphony.com" },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/customer-update-contacts-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Contact successfully updated",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/update-contacts-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed input",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/external-network-not-found",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Update User forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_1",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_4",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Contact update failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/update-account-failed",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/advisors":
        {
          "get":
            {
              "deprecated": true,
              "tags": ["Search"],
              "summary": "Search for an Advisor (deprecated)",
              "description": "Search for an Advisor by email address or SymphonyId and external network<br />\n",
              "operationId": "findAdvisor",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "External network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "advisorEmailAddress",
                    "in": "query",
                    "description": "Advisor's email address",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "advisorSymphonyId",
                    "in": "query",
                    "description": "Advisor's Symphony id",
                    "required": false,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Advisor found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/entitlement-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found (Advisor may not be entitled for this external network)",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_5",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/contacts/{contactSymphonyId}/advisors":
        {
          "get":
            {
              "tags": ["Search"],
              "summary": "List contact’s advisors (recommended)",
              "description": "Search for the advisors of a provided contact email address for a given external network.<br />\n",
              "operationId": "findAdvisorsv2",
              "parameters":
                [
                  {
                    "name": "contactSymphonyId",
                    "in": "path",
                    "description": "The Contact's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of Advisor(s) found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisors-search-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_6",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/contacts/contactEmailAddress/{contactEmailAddress}/externalNetwork/{externalNetwork}/advisors"
      : {
          "get":
            {
              "deprecated": true,
              "tags": ["Search"],
              "summary": "Search the Advisors of a Contact (deprecated)",
              "description": "Search for the Advisors of a provided Contact email address for a given external network<br />\n",
              "operationId": "findAdvisors",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "contactEmailAddress",
                    "in": "path",
                    "description": "The Contact's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of Advisor(s) found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/advisors-search-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Contact not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_6",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/advisors/{advisorSymphonyId}/externalNetwork/{externalNetwork}/contacts"
      : {
          "get":
            {
              "tags": ["Search"],
              "summary": "List an advisor's contacts (recommended)",
              "description": "Search for the contacts associated with the provided advisor’s Symphony userId for a given external network.<br/>\n",
              "operationId": "findContactsOfAdvisorv2",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "advisorSymphonyId",
                    "in": "path",
                    "description": "Advisor's SymphonyId",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of Contacts(s) found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contacts-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_5",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      ? "/api/v1/customer/advisors/advisorEmailAddress/{advisorEmailAddress}/externalNetwork/{externalNetwork}/contacts"
      : {
          "get":
            {
              "deprecated": true,
              "tags": ["Search"],
              "summary": "Search an Advisor's Contact (deprecated)",
              "description": "Search Contacts associated with the Advisor for which the email address is provided for a given external network<br/>\n",
              "operationId": "findContactsOfAdvisor",
              "parameters":
                [
                  {
                    "name": "externalNetwork",
                    "in": "path",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema":
                      {
                        "minLength": 1,
                        "type": "string",
                        "example": "WHATSAPP",
                      },
                  },
                  {
                    "name": "advisorEmailAddress",
                    "in": "path",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "william.smith@symphony.com",
                      },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of Contacts(s) found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/contacts-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_5",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/rooms":
        {
          "get":
            {
              "tags": ["Room"],
              "summary": "List an Advisor's rooms (recommended)",
              "description": "List all rooms for which an Advisor is either a member or an owner for a given network.<br />\nSearch is performed with the Advisor's Symphony user Id.<br/>\nThis end point returns at most 25 records per page.<br/>\n",
              "operationId": "listRoomsv2",
              "parameters":
                [
                  {
                    "name": "advisorSymphonyId",
                    "in": "query",
                    "description": "Advisor's Symphony id",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                  {
                    "name": "owner",
                    "in": "query",
                    "description": 'If set to "true", list the rooms where the Advisor is an owner<br/> If set to "false", list the rooms where the Advisor is only a member<br/>',
                    "schema": { "type": "boolean", "default": true },
                  },
                  {
                    "name": "before",
                    "in": "query",
                    "description": "The before cursor for pagination",
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "after",
                    "in": "query",
                    "description": "The after cursor for pagination",
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of rooms found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/rooms-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed parameter",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/invalid-page-cursor",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "tags": ["Room"],
              "summary": "Create room (recommended)",
              "description": "Create a room with the Advisor whose Symphony User Id is provided.<br/>\nThe advisor is set as a member.<br/>\n",
              "operationId": "createRoomv2",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/room-requestv2" },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Room successfully created",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-creation-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad Request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400_2",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_2",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_7",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict (room name already exists)",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-already-exists",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Room creation failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_500",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/rooms":
        {
          "get":
            {
              "deprecated": true,
              "tags": ["Room"],
              "summary": "List an Advisor's rooms (deprecated)",
              "description": "List all rooms for which an Advisor is either a member or an owner for a given network.<br />\nSearch is performed with the Advisor's email address.<br/>\nThis end point returns at most 25 records per page.<br/>\n",
              "operationId": "listRooms",
              "parameters":
                [
                  {
                    "name": "advisorEmailAddress",
                    "in": "query",
                    "description": "Advisor's email address",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "The external network : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                  {
                    "name": "owner",
                    "in": "query",
                    "description": 'If set to "true", list the rooms where the Advisor is an owner<br/> If set to "false", list the rooms where the Advisor is only a member<br/>',
                    "schema": { "type": "boolean", "default": true },
                  },
                  {
                    "name": "before",
                    "in": "query",
                    "description": "The before cursor for pagination",
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "after",
                    "in": "query",
                    "description": "The after cursor for pagination",
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of rooms found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/rooms-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed parameter",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/invalid-page-cursor",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "deprecated": true,
              "tags": ["Room"],
              "summary": "Create room (deprecated)",
              "description": "Create a room with the Advisor whose email address is provided.<br/>\nThe advisor is set as a member.<br/>\n",
              "operationId": "createRoom",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            { "$ref": "#/components/schemas/room-request" },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Room successfully created",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-creation-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Bad Request",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400_2",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_2",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Advisor not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_7",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict (room name already exists)",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-already-exists",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Room creation failed",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_500",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/rooms/{streamId}/members":
        {
          "delete":
            {
              "tags": ["Room"],
              "summary": "Remove room member (recommended)",
              "description": "Remove any member, advisor or contact, from a room.  <br/> The room is identified by its streamID. <br/>",
              "operationId": "removeRoomMemberv2",
              "parameters":
                [
                  {
                    "name": "streamId",
                    "in": "path",
                    "description": "Room's streamId. <br/>\nThe streamID needs to be URLsafe Base64.<br/>\nTo obtain the URLSafe Base64 Conversation ID:\n<ul>\n  <li>Replace forward slashes / with underscores _ </li>\n  <li>Replace pluses + with minuses - </li>\n  <li>Ignore any trailing equal signs = </li>\n</ul>\nFor example, the URLSafe Base64 encoding of: lX1hwfmQ+AK/k/a/BB0y2n///q2+0KfbdA== converts to lX1hwfmQ-AK_k_a_BB0y2n___q2-0KfbdA.\n",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                      },
                  },
                  {
                    "name": "memberSymphonyId",
                    "in": "query",
                    "description": "The symphonyId of the member to remove",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "number",
                        "example": 1234567890,
                      },
                  },
                  {
                    "name": "advisorSymphonyId",
                    "in": "query",
                    "description": "The symphony id of the advisor who is removing member.",
                    "required": true,
                    "schema": { "type": "number", "example": 1234567890 },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Member sucessfully removed from the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/remove-room-members-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_3",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_8",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_409_1",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "post":
            {
              "tags": ["Room"],
              "summary": "Add room member (recommended)",
              "description": "Add a member to a room:\n<ul>\n  <li> An Advisor must be entitled for the relevant external network.</li>\n  <li> a Contact must have been already onboarded.</li>\n<ul><br/>\n",
              "operationId": "addRoomMemberMultiRoomv2",
              "parameters":
                [
                  {
                    "name": "streamId",
                    "in": "path",
                    "description": "Room's streamId. <br/>\nThe streamID needs to be URLsafe Base64.<br/>\nTo obtain the URLSafe Base64 Conversation ID:\n<ul>\n  <li>Replace forward slashes / with underscores _ </li>\n  <li>Replace pluses + with minuses - </li>\n  <li>Ignore any trailing equal signs = </li>\n</ul>\nFor example, the URLSafe Base64 encoding of: lX1hwfmQ+AK/k/a/BB0y2n///q2+0KfbdA== converts to lX1hwfmQ-AK_k_a_BB0y2n___q2-0KfbdA.\n",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                      },
                  },
                ],
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/room-member-requestv2",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Member sucessfully added to the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-member-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400_3",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_2",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_9",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-is-deactivated",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Failed to add member to the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/add-room-member-failed",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/rooms/{streamId}/members":
        {
          "get":
            {
              "tags": ["Room"],
              "summary": "List room members",
              "description": "List a room’s members. The room is identified by its streamID.<br />\n",
              "operationId": "listRoomMembers",
              "parameters":
                [
                  {
                    "name": "streamId",
                    "in": "path",
                    "description": "Room's streamId. <br/>\nThe streamID needs to be URLsafe Base64.<br/>\nTo obtain the URLSafe Base64 Conversation ID:\n<ul>\n  <li>Replace forward slashes / with underscores _ </li>\n  <li>Replace pluses + with minuses - </li>\n  <li>Ignore any trailing equal signs = </li>\n</ul>\nFor example, the URLSafe Base64 encoding of: lX1hwfmQ+AK/k/a/BB0y2n///q2+0KfbdA== converts to lX1hwfmQ-AK_k_a_BB0y2n___q2-0KfbdA.\n",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "lX1hwfmQ-AK_k_a_BB0y2n___q2-0KfbdA",
                      },
                  },
                  {
                    "name": "before",
                    "in": "query",
                    "description": "The before cursor for pagination",
                    "schema": { "type": "string" },
                  },
                  {
                    "name": "after",
                    "in": "query",
                    "description": "The after cursor for pagination",
                    "schema": { "type": "string" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of room members",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-members-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed parameter",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/invalid-page-cursor",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
          "delete":
            {
              "deprecated": true,
              "tags": ["Room"],
              "summary": "Remove room member (deprecated)",
              "description": "Remove a member from a room, be it an Advisor or a Contact. <br/> The room is identified by its streamID. <br/>",
              "operationId": "removeRoomMember",
              "parameters":
                [
                  {
                    "name": "streamId",
                    "in": "path",
                    "description": "Room's streamId. <br/>\nThe streamID needs to be URLsafe Base64.<br/>\nTo obtain the URLSafe Base64 Conversation ID:\n<ul>\n  <li>Replace forward slashes / with underscores _ </li>\n  <li>Replace pluses + with minuses - </li>\n  <li>Ignore any trailing equal signs = </li>\n</ul>\nFor example, the URLSafe Base64 encoding of: lX1hwfmQ+AK/k/a/BB0y2n///q2+0KfbdA== converts to lX1hwfmQ-AK_k_a_BB0y2n___q2-0KfbdA.\n",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                      },
                  },
                  {
                    "name": "memberEmailAddress",
                    "in": "query",
                    "description": "The email address of the member to remove",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@symphony.com",
                      },
                  },
                  {
                    "name": "externalNetwork",
                    "in": "query",
                    "description": "The external network of the member to remove : WECHAT or WHATSAPP or SMS",
                    "required": true,
                    "schema": { "type": "string", "example": "WHATSAPP" },
                  },
                  {
                    "name": "advisorEmailAddress",
                    "in": "query",
                    "description": "The email address of the advisor who is removing member.",
                    "required": true,
                    "schema":
                      {
                        "type": "string",
                        "example": "william.smith@symphony.com",
                      },
                  },
                  {
                    "name": "contact",
                    "in": "query",
                    "description": 'If set to "true", the member to remove is a Contact,<br/> If set to "false", the member to remove is an Advisor. <br/>',
                    "required": true,
                    "schema": { "type": "boolean" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "Member sucessfully removed from the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/remove-room-members-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_3",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_8",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/rooms/members":
        {
          "post":
            {
              "deprecated": true,
              "tags": ["Room"],
              "summary": "Add room member (deprecated)",
              "description": "Add a member to a room:\n<ul>\n  <li> An Advisor must be entitled for the relevant external network.</li>\n  <li> a Contact must have been already onboarded.</li>\n<ul><br/>\n",
              "operationId": "addRoomMemberMultiRoom",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/room-member-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Member sucessfully added to the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/room-member-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_400_3",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "oneOf":
                                    [
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_2",
                                      },
                                      {
                                        "$ref": "#/components/schemas/inline_response_403_0",
                                      },
                                    ],
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Not Found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_404_9",
                                },
                            },
                        },
                    },
                  "409":
                    {
                      "description": "Conflict",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/member-already-in-room",
                                },
                            },
                        },
                    },
                  "500":
                    {
                      "description": "Failed to add member to the room",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/add-room-member-failed",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v2/customer/rooms/members":
        {
          "post":
            {
              "tags": ["Room"],
              "summary": "Add room members in bulk (recommended)",
              "description": "Add multiple advisors and/or contacts to a room, <br />\nAn Advisor must be entitled for the relevant external network. A Contact must have been already onboarded.\n",
              "operationId": "addRoomMembersMultiRoomv2",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/bulk-room-member-multi-room-requestv2",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Operation to add members to the room completed. <br/> Returns an object with the detail of each member addition success or failure.<br/>",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/bulk-room-member-responsev2",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed parameter",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/rfc-error" },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/rooms/members/bulk":
        {
          "post":
            {
              "deprecated": true,
              "tags": ["Room"],
              "summary": "Add room members in bulk (deprecated)",
              "description": "Add multiple members to a room:\n<ul>\n  <li> Advisors must be entitled for the relevant external network.</li>\n  <li> Contacts must have been already onboarded.</li>\n<ul><br/>\nReturns a report indicating the success or failure for each element of the array </ul>\n",
              "operationId": "addRoomMembersMultiRoom",
              "requestBody":
                {
                  "content":
                    {
                      "application/json":
                        {
                          "schema":
                            {
                              "$ref": "#/components/schemas/bulk-room-member-multi-room-request",
                            },
                        },
                    },
                },
              "responses":
                {
                  "200":
                    {
                      "description": "Operation to add members to the room completed. <br/> Returns an object with the detail of each member addition success or failure.<br/>",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/bulk-room-member-response",
                                },
                            },
                        },
                    },
                  "400":
                    {
                      "description": "Missing or malformed parameter",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                { "$ref": "#/components/schemas/rfc-error" },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                },
              "security": [{ "sfsAuthentication": [] }],
            },
        },
      "/api/v1/customer/companies/search":
        {
          "get":
            {
              "tags": ["Companies"],
              "summary": "Search for companies",
              "description": "Search for companies by name<br />\n<b>Note :</b> The WeChat or Whatsapp or SMS onboarding applications do not enforce consistency for company names.\n",
              "security": [{ "sfsAuthentication": [] }],
              "operationId": "searchCompanies",
              "parameters":
                [
                  {
                    "name": "query",
                    "in": "query",
                    "description": "Start of the company's name to match.",
                    "required": true,
                    "schema":
                      { "minLength": 3, "type": "string", "example": "sym" },
                  },
                ],
              "responses":
                {
                  "200":
                    {
                      "description": "List of found companies",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/companies-search-response",
                                },
                            },
                        },
                    },
                  "401":
                    {
                      "description": "Unauthorized",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_401",
                                },
                            },
                        },
                    },
                  "403":
                    {
                      "description": "Operation forbidden",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/inline_response_403_0",
                                },
                            },
                        },
                    },
                  "404":
                    {
                      "description": "Company not found",
                      "content":
                        {
                          "application/json":
                            {
                              "schema":
                                {
                                  "$ref": "#/components/schemas/company-not-found",
                                },
                            },
                        },
                    },
                },
            },
        },
    },
  "components":
    {
      "schemas":
        {
          "entitlements-response":
            {
              "type": "object",
              "properties":
                {
                  "entitlements": { "example": ["WECHAT", "WHATSAPP", "SMS"] },
                },
            },
          "entitled-response":
            {
              "type": "object",
              "properties":
                {
                  "entitlements":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/entitlement-response" },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "entitlement-response":
            {
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId":
                    { "type": "string", "example": 14362370637825 },
                  "firstName": { "type": "string", "example": "William" },
                  "lastName": { "type": "string", "example": "Smith" },
                  "companyName": { "type": "string", "example": "Company" },
                  "displayName":
                    { "type": "string", "example": "William Smith" },
                  "emailAddress":
                    {
                      "type": "string",
                      "example": "william.smith@symphony.com",
                    },
                  "avatar":
                    {
                      "type": "string",
                      "example": "https://YOURDOMAIN.symphony.com/avatars/3gXMhglCCTwLPL9JAprnyHzYn5-PR49-wYDG814n1g8.png",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "invalid-page-cursor":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "invalid.page.cursor" },
                  "title":
                    {
                      "type": "string",
                      "format": "The provided cursor key is invalid or expired.",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "The provided cursor key is invalid or expired",
            },
          "entitlement-request":
            {
              "required": ["externalNetwork"],
              "type": "object",
              "properties":
                {
                  "advisorEmailAddress":
                    {
                      "type": "string",
                      "example": "william.smith@symphony.com",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "symphonyId": { "type": "string", "example": 12345678912365 },
                },
            },
          "entitlement-user-already-exists-problem":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "entitlement.already.exists",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Entitlement already exists.",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Entitlement already exists.",
            },
          "symphony-user-not-found-problem":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "symphony.user.not.found" },
                  "title":
                    { "type": "string", "format": "Symphony user not found." },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Symphony user not found.",
            },
          "entitlement-type-not-found-problem":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "entitlement.type.not.found",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Entitlement type not found.",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Entitlement type not found",
            },
          "forbidden-entitlement-type":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "forbidden.entitlement.type",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Forbidden entitlement.type.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "Forbidden entitlement type.",
            },
          "tenant-configuration-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "tenant.configuration.not.found",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Tenant configuration not found.",
                    },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Tenant configuration not found.",
            },
          "entitlement-not-found-problem":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "entitlement.not.found" },
                  "title":
                    { "type": "string", "format": "Entitlement not found." },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Entitlement not found.",
            },
          "contact-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "contact.not.found" },
                  "title": { "type": "string", "format": "Contact not found" },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Contact not found",
            },
          "company-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "company.not.found" },
                  "title": { "type": "string", "format": "Company not found" },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Company not found",
            },
          "deleteContacts-response":
            {
              "type": "object",
              "properties":
                {
                  "report":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/deleteContact-response",
                        },
                    },
                },
            },
          "deleteContact-response":
            {
              "type": "object",
              "properties":
                {
                  "contact":
                    { "$ref": "#/components/schemas/deleteContact-request" },
                  "status":
                    { "$ref": "#/components/schemas/bulk-removal-status" },
                },
            },
          "deleteContact-request":
            {
              "required":
                [
                  "advisorEmailAddress",
                  "externalNetwork",
                  "contactEmailAddress",
                ],
              "type": "object",
              "properties":
                {
                  "advisorEmailAddress":
                    {
                      "type": "string",
                      "example": "william.smith@symphony.com",
                    },
                  "contactEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@symphony.com",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "customer-deleteAdvisorContacts-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "report":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/customer-deleteAdvisorContact-responsev2",
                        },
                    },
                },
            },
          "customer-deleteAdvisorContact-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "contact":
                    {
                      "$ref": "#/components/schemas/customer-deleteAdvisorContact-contact",
                    },
                  "status":
                    { "$ref": "#/components/schemas/bulk-removal-status" },
                },
            },
          "customer-deleteAdvisorContact-contact":
            {
              "required":
                ["advisorSymphonyId", "phoneNumber", "externalNetwork"],
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId":
                    { "type": "string", "example": 1234567890 },
                  "phoneNumber":
                    { "type": "string", "example": "+1 234567890" },
                  "externalNetwork":
                    { "type": "string", "example": "WHATSAPP" },
                },
            },
          "deleteContacts-request":
            {
              "type": "object",
              "properties":
                {
                  "contacts":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/deleteContact-request",
                        },
                    },
                },
            },
          "customer-contactWithId-response":
            {
              "type": "object",
              "properties":
                {
                  "contact":
                    { "$ref": "#/components/schemas/customer-contactWithId" },
                  "status":
                    { "$ref": "#/components/schemas/bulk-removal-status" },
                },
            },
          "customer-contactsWithId-response":
            {
              "type": "object",
              "properties":
                {
                  "report":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/customer-contactWithId-response",
                        },
                    },
                },
            },
          "customer-contactWithId":
            {
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId": { "type": "string" },
                  "advisorEmailAddress": { "type": "string" },
                  "contactEmailAddress": { "type": "string" },
                  "externalNetwork": { "type": "string" },
                },
            },
          "deleteContacts-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "report":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/deleteContact-responsev2",
                        },
                    },
                },
            },
          "deleteContact-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "contact":
                    { "$ref": "#/components/schemas/deleteContact-requestv2" },
                  "status":
                    { "$ref": "#/components/schemas/bulk-removal-statusv2" },
                },
            },
          "deleteContact-requestv2":
            {
              "required": ["advisorSymphonyId", "contactSymphonyId"],
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId":
                    { "type": "string", "example": 1234567890 },
                  "contactSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                },
            },
          "deleteContacts-requestv2":
            {
              "type": "object",
              "properties":
                {
                  "contacts":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/deleteContact-requestv2",
                        },
                    },
                },
            },
          "customer-contactWithId-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "contact":
                    { "$ref": "#/components/schemas/customer-contactWithIdv2" },
                  "status":
                    { "$ref": "#/components/schemas/bulk-removal-status" },
                },
            },
          "customer-contactsWithId-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "report":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/customer-contactWithId-responsev2",
                        },
                    },
                },
            },
          "customer-contactWithIdv2":
            {
              "type": "object",
              "properties": { "advisorSymphonyId": { "type": "string" } },
            },
          "advisor-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "example": "advisor.not.found" },
                  "title": { "type": "string", "example": "advisor not found" },
                  "status": { "type": "integer", "example": 404 },
                },
              "description": "Advisor not found",
            },
          "room-is-deactivated":
            {
              "type": "object",
              "description": "The Room is Deactivated.",
              "properties":
                {
                  "type": { "type": "string", "format": "room.is.deactivated" },
                  "title":
                    { "type": "string", "format": "The Room is Deactivated." },
                  "status": { "type": "integer", "example": 409 },
                  "roomName":
                    {
                      "type": "string",
                      "nullable": true,
                      "format": "name of the deactivated room",
                    },
                },
            },
          "Unauthorized":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "example": "unauthorized" },
                  "title": { "type": "string", "example": "Unauthorized" },
                  "status": { "type": "integer", "example": 401 },
                },
              "description": "Full authentication is required to access this resource",
            },
          "Forbidden":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "example": "Forbidden" },
                  "title": { "type": "string", "example": "Forbidden" },
                  "status": { "type": "integer", "example": 403 },
                },
              "description": "Access is denied, you don't have the permission to perform this operation",
            },
          "permissions-response":
            {
              "type": "object",
              "properties":
                {
                  "permissions":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/list-permission-response",
                        },
                    },
                },
            },
          "list-permission-response":
            { "type": "string", "example": "create:room" },
          "permission-response":
            {
              "type": "object",
              "properties":
                {
                  "permissionName":
                    { "type": "string", "example": "create:room" },
                },
            },
          "advisor-permissions-response":
            {
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId":
                    { "type": "string", "example": 14362370637825 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "permissions":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/permission-response" },
                    },
                },
            },
          "advisors-permission-requestv2":
            {
              "required":
                ["advisorSymphonyIds", "externalNetwork", "permissionName"],
              "type": "object",
              "properties":
                {
                  "advisorSymphonyIds":
                    {
                      "type": "array",
                      "items": { "type": "string", "example": 1234567890 },
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "permissionName":
                    { "type": "string", "example": "create:room" },
                },
            },
          "advisors-permission-request":
            {
              "required":
                ["advisorEmailAddress", "externalNetwork", "permissionName"],
              "type": "object",
              "properties":
                {
                  "advisorEmailAddress":
                    {
                      "type": "array",
                      "items":
                        {
                          "type": "string",
                          "example": "william.smith@symphony.com",
                        },
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "permissionName":
                    { "type": "string", "example": "create:room" },
                },
            },
          "advisor-permission-request":
            {
              "required": ["permissionName"],
              "type": "object",
              "properties":
                {
                  "permissionName":
                    { "type": "string", "example": "create:room" },
                },
            },
          "advisor-permission-response":
            {
              "type": "object",
              "properties":
                {
                  "advisorSymphonyId":
                    { "type": "string", "example": 14362370637825 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "permission":
                    { "$ref": "#/components/schemas/permission-response" },
                },
            },
          "permission-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "permission.not.found" },
                  "title":
                    { "type": "string", "format": "Permission not found." },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Permission not found.",
            },
          "permission-already-assigned":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "permission.already.assigned",
                      "example": "permission.already.assigned",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Permission already assigned.",
                      "example": "Permission already assigned.",
                    },
                  "status":
                    { "type": "integer", "format": "409", "example": 409 },
                },
              "description": "Permission already assigned.",
            },
          "bulk-advisor-permission-response":
            {
              "type": "object",
              "properties":
                {
                  "advisorsPermissions":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/bulk-advisor-permission-item-response",
                        },
                    },
                },
            },
          "bulk-advisor-permission-item-response":
            {
              "type": "object",
              "properties":
                {
                  "status": { "type": "integer" },
                  "response":
                    {
                      "$ref": "#/components/schemas/advisor-permission-response",
                    },
                  "error": { "$ref": "#/components/schemas/bulk-item-error" },
                },
            },
          "multiple-advisor-permission-response":
            {
              "type": "array",
              "items":
                {
                  "type": "object",
                  "properties":
                    {
                      "status": { "type": "integer", "example": 200 },
                      "response":
                        {
                          "type": "object",
                          "properties":
                            {
                              "advisorSymphonyId":
                                {
                                  "type": "integer",
                                  "description": "Symphony user id of the advisor",
                                  "example": 12345678912365,
                                },
                              "email":
                                {
                                  "type": "string",
                                  "description": "email adress of the advisor",
                                  "example": "william.smith@symphony.com",
                                },
                              "externalNetwork":
                                {
                                  "description": "WHATSAPP",
                                  "type": "string",
                                  "example": "WECHAT or WHATSAPP or SMS",
                                },
                              "permission":
                                {
                                  "type": "object",
                                  "properties":
                                    {
                                      "permissionName":
                                        {
                                          "type": "string",
                                          "example": "create:room",
                                        },
                                    },
                                },
                            },
                        },
                      "error":
                        {
                          "type": "object",
                          "description": "Should an error occur while adding or removing the permission, this returned object will provide details about the error(s)",
                          "properties":
                            {
                              "title":
                                {
                                  "type": "string",
                                  "example": "advisor.not.found",
                                },
                              "detail":
                                {
                                  "type": "string",
                                  "example": "Advisor 68719476737 does not exist",
                                },
                            },
                        },
                    },
                },
            },
          "customer-contact-request":
            {
              "allOf":
                [
                  { "$ref": "#/components/schemas/contact-request" },
                  {
                    "required": ["onboarderEmailAddress"],
                    "type": "object",
                    "properties":
                      {
                        "advisorEmailAddresses":
                          {
                            "type": "array",
                            "description": 'A list of the Advisors'' emails to whom the Contact is to be added. For Wechat, an "onboarder" is an Advisor with the permission "create:contact". For Whatsapp and SMS the permission is set by default.',
                            "items":
                              {
                                "type": "string",
                                "format": "email",
                                "example": "william.smith@symphony.com",
                              },
                          },
                        "onboarderEmailAddress":
                          {
                            "type": "string",
                            "example": "william.smith@symphony.com",
                            "description": "If both advisorSymphonyIds and advisorEmailAddresses are empty, the Contact will be added to the onboarder with this email address.",
                          },
                      },
                  },
                ],
            },
          "add-contact-response":
            {
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "Doe" },
                  "companyName": { "type": "string", "example": "Company" },
                  "emailAddress":
                    { "type": "string", "example": "johndoe@symphony.com" },
                  "phoneNumber": { "type": "string", "example": 911234567890 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "symphonyId": { "type": "string", "example": 12345678912365 },
                },
            },
          "list-contact-response":
            {
              "type": "object",
              "properties":
                {
                  "contacts":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/find-contact-response",
                        },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "find-contact-response":
            {
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "Doe" },
                  "companyName": { "type": "string", "example": "Company" },
                  "emailAddress":
                    { "type": "string", "example": "johndoe@symphony.com" },
                  "phoneNumber": { "type": "string", "example": 911234567890 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "symphonyId": { "type": "string", "example": 12345678912365 },
                  "advisors":
                    {
                      "type": "array",
                      "description": "Advisors Symphony IDs",
                      "items": { "type": "string" },
                      "example": [123456789, 369258147, 7896564123],
                    },
                  "status":
                    {
                      "type": "string",
                      "enum":
                        [
                          "PENDING_CONFIRMATION",
                          "CONFIRMED",
                          "INVITE_EXPIRED",
                          "CANCELED",
                        ],
                    },
                },
            },
          "external-network-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "external.network.not.found",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "External network not found.",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "External network not found.",
            },
          "invalid-user-info":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "invalid.user.information" },
                  "title":
                    { "type": "string", "format": "Invalid user information" },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Invalid user information",
            },
          "rename-room-forbidden":
            {
              "type": "object",
              "description": "Rename room forbidden",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "rename.room.forbidden" },
                  "title":
                    {
                      "type": "string",
                      "format": "Not allowed to rename the room.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
            },
          "different-room-name-required":
            {
              "type": "object",
              "description": "Different room name is required.",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "different.room.name.required",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Different room name is required.",
                    },
                  "status": { "type": "integer", "format": "409" },
                },
            },
          "cannot-rename-room-duplicate-room-name":
            {
              "type": "object",
              "description": "Cannot rename room because the owner already has a room with the same name.",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "cannot.rename.room.duplicate.room.name",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Cannot rename room because the owner already has a room with the same name.",
                    },
                  "status": { "type": "integer", "format": "409" },
                },
            },
          "rename-room-failed":
            {
              "type": "object",
              "description": "Failed to rename the room.",
              "properties":
                {
                  "type": { "type": "string", "format": "rename.room.failed" },
                  "title":
                    {
                      "type": "string",
                      "format": "Unable to rename the room.",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
            },
          "forbidden-advisor":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "onboarding.forbidden.advisor",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "This Advisor is not permissioned for Onboarding.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "This Advisor is not permissioned for Onboarding.",
            },
          "forbidden-onboarder":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "onboarding.forbidden.onboarder",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "This Onboarder is not entitled for this external network.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "This Onboarder is not entitled for this external network.",
            },
          "user-already-onboarded":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "user.already.onboarded" },
                  "title":
                    {
                      "type": "string",
                      "format": "Contact already onboarded.",
                    },
                  "status": { "type": "integer", "format": "409" },
                },
              "description": "Contact already onboarded.",
            },
          "user-already-exists":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "user.already.exists" },
                  "title":
                    { "type": "string", "format": "Contact already exists." },
                  "status": { "type": "integer", "format": "409" },
                },
              "description": "Contact already exists.",
            },
          "create-account-failed":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "account.creation.failed" },
                  "title":
                    {
                      "type": "string",
                      "format": "Unable to create the account.",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
              "description": "Gateway microservice cannot create the Symphony account.",
            },
          "customer-update-contacts-requestv2":
            {
              "required":
                [
                  "firstName",
                  "lastName",
                  "companyName",
                  "phoneNumber",
                  "advisorSymphonyId",
                ],
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "DoeABC" },
                  "companyName": { "type": "string", "example": "Company" },
                  "phoneNumber":
                    {
                      "type": "string",
                      "format": "phone",
                      "example": 911234567890,
                    },
                  "advisorSymphonyId":
                    {
                      "type": "string",
                      "pattern": "^\\d+$",
                      "example": 1234567890,
                    },
                },
            },
          "customer-update-contacts-request":
            {
              "allOf":
                [
                  { "$ref": "#/components/schemas/update-contacts-request" },
                  {
                    "required": ["advisorEmailAddress"],
                    "type": "object",
                    "properties":
                      {
                        "advisorEmailAddress":
                          {
                            "type": "string",
                            "format": "email",
                            "example": "william.smith@symphony.com",
                          },
                      },
                  },
                ],
            },
          "update-contacts-response":
            {
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "DoeABC" },
                  "companyName": { "type": "string", "example": "Company" },
                  "emailAddress":
                    { "type": "string", "example": "johndoe@symphony.com" },
                  "phoneNumber": { "type": "string", "example": 911234567890 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "symphonyId":
                    {
                      "type": "string",
                      "description": "Federated user Symphony id",
                      "example": 12345678912365,
                    },
                  "advisors":
                    {
                      "type": "array",
                      "description": "Advisors Symphony IDs",
                      "items": { "type": "string", "example": 14362370637825 },
                    },
                },
            },
          "update-contacts-response-v2":
            {
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "DoeABC" },
                  "companyName": { "type": "string", "example": "Company" },
                  "emailAddress":
                    { "type": "string", "example": "johndoe@symphony.com" },
                  "phoneNumber": { "type": "string", "example": 911234567890 },
                  "symphonyId":
                    {
                      "type": "string",
                      "description": "Federated user Symphony id",
                      "example": 12345678912365,
                    },
                  "advisors":
                    {
                      "type": "array",
                      "description": "Advisors Symphony IDs",
                      "items": { "type": "string", "example": 14362370637825 },
                    },
                },
            },
          "update-forbidden-for-advisor":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "update.forbidden.advisor" },
                  "title":
                    {
                      "type": "string",
                      "format": "Contacts update is forbidden for this Advisor.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "Contacts update is forbidden for this Advisor.",
            },
          "multi-tenant-federated-user-update-attempt":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "multi.tenant.federated.user.update.attempt",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Found Contact records spanning across more than one tenant.",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "Found Contact records spanning across more than one tenant.",
            },
          "update-account-failed":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "account.update.failed" },
                  "title":
                    {
                      "type": "string",
                      "format": "Unable to update the Contact.",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
              "description": "Gateway microservice cannot update the Symphony account.",
            },
          "advisors-search-response":
            {
              "type": "object",
              "properties":
                {
                  "advisors":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/entitlement-response" },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "contacts-response":
            {
              "type": "object",
              "properties":
                {
                  "contacts":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/add-contact-response" },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "rooms-response":
            {
              "type": "object",
              "properties":
                {
                  "rooms":
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/room-response" },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "room-response":
            {
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "roomName": { "type": "string", "example": "API room" },
                  "advisorSymphonyId":
                    { "type": "string", "example": 12345678912365 },
                  "created":
                    {
                      "type": "string",
                      "format": "date-time",
                      "example": 1547661232368,
                    },
                  "updated":
                    {
                      "type": "string",
                      "format": "date-time",
                      "example": 1547661232370,
                    },
                  "roomType": { "type": "string", "enum": ["ROOM", "IM"] },
                  "membersCount": { "type": "integer", "example": 1 },
                  "company": { "type": "string", "example": "Company" },
                  "roomStatus":
                    {
                      "type": "string",
                      "enum": ["ACTIVE", "LIMITED", "DEACTIVATED", "UNKNOWN"],
                    },
                  "limitedMembersCount": { "type": "integer", "example": 1 },
                  "pendingMembersCount": { "type": "integer", "example": 2 },
                  "unknownStatusMembersCount":
                    { "type": "integer", "example": 0 },
                },
            },
          "room-creation-response":
            {
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "roomName": { "type": "string", "example": "API room" },
                  "advisorSymphonyId":
                    { "type": "string", "example": 12345678912365 },
                  "created":
                    {
                      "type": "string",
                      "format": "date-time",
                      "example": 1547661232368,
                    },
                  "updated":
                    {
                      "type": "string",
                      "format": "date-time",
                      "example": 1547661232370,
                    },
                  "roomType": { "type": "string", "enum": ["ROOM", "IM"] },
                  "membersCount": { "type": "integer", "example": 1 },
                },
            },
          "room-request":
            {
              "required":
                ["advisorEmailAddress", "externalNetwork", "roomName"],
              "type": "object",
              "properties":
                {
                  "roomName":
                    {
                      "maxLength": 50,
                      "type": "string",
                      "example": "API room",
                    },
                  "advisorEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "william.smith@symphony.com",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "maxLength": 50,
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "room-requestv2":
            {
              "required": ["ownerSymphonyId", "externalNetwork", "roomName"],
              "type": "object",
              "properties":
                {
                  "roomName":
                    {
                      "maxLength": 50,
                      "type": "string",
                      "example": "API room",
                    },
                  "ownerSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "maxLength": 50,
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "rename-room-request":
            {
              "type": "object",
              "required": ["newRoomName"],
              "properties":
                {
                  "newRoomName":
                    { "type": "string", "minLength": 1, "maxLength": 50 },
                },
            },
          "rename-room-response":
            {
              "type": "object",
              "properties":
                {
                  "streamId": { "type": "string" },
                  "oldRoomName": { "type": "string" },
                  "newRoomName": { "type": "string" },
                },
            },
          "connection-not-accepted":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "connection.not.accepted" },
                  "title":
                    {
                      "type": "string",
                      "format": "connection with Symphony Connect Assistant is not accepted",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Connection with Symphony Connect Assistant is not accepted",
            },
          "federated-account-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "federated.account.not.found",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "federated account not found",
                    },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "FederatedAccount not found.",
            },
          "room-already-exists":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "room.already.exists" },
                  "title":
                    { "type": "string", "format": "Room already exists." },
                  "status": { "type": "integer", "format": "409" },
                },
              "description": "Room already exists.",
            },
          "create-room-failed":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "room.creation.failed" },
                  "title":
                    {
                      "type": "string",
                      "format": "Unable to create the room.",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
              "description": "Gateway microservice cannot create the room.",
            },
          "missing-connection-with-connect-bot":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "missing.connection.with.connect.bot",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "connection with Symphony Connect Assistant does not exist",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
              "description": "Connection with Symphony Connect Assistant does not exist",
            },
          "room-members-response":
            {
              "type": "object",
              "properties":
                {
                  "members":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/room-member-response" },
                    },
                  "pagination": { "$ref": "#/components/schemas/pagination" },
                },
            },
          "room-member-response":
            {
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "symphonyId": { "type": "string", "example": 12345678912365 },
                  "federatedUserId":
                    { "type": "string", "example": 14362370637825 },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "Doe" },
                  "companyName": { "type": "string", "example": "Company" },
                  "avatar":
                    {
                      "type": "string",
                      "example": "https://YOURDOMAIN.symphony.com/avatars/3gXMhglCCTwLPL9JAprnyHzYn5-PR49-wYDG814n1g8.png",
                    },
                  "displayName": { "type": "string", "example": "John Doe" },
                  "emailAddress":
                    { "type": "string", "example": "johndoe@symphony.com" },
                  "isOwner": { "type": "boolean", "example": false },
                },
            },
          "remove-room-members-response":
            {
              "type": "object",
              "properties": { "isRoomDeleted": { "type": "boolean" } },
            },
          "remove-room-member-forbidden":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "remove.room.member.forbidden",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "Remove room member forbidden",
                    },
                  "status": { "type": "integer", "format": "403" },
                },
              "description": "Remove room member forbidden",
            },
          "room-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type": { "type": "string", "format": "room.not.found" },
                  "title": { "type": "string", "format": "Room not found" },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Room not found",
            },
          "room-member-not-found":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "room.member.not.found" },
                  "title":
                    { "type": "string", "format": "Room member not found" },
                  "status": { "type": "integer", "format": "404" },
                },
              "description": "Room member not found",
            },
          "room-member-request":
            {
              "required":
                [
                  "advisorEmailAddress",
                  "externalNetwork",
                  "contact",
                  "memberEmailAddress",
                  "streamId",
                ],
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "memberEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@symphony.com",
                    },
                  "advisorEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "william.smith@symphony.com",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "contact": { "type": "boolean", "example": true },
                },
            },
          "room-member-requestv2":
            {
              "required": ["advisorSymphonyId", "memberSymphonyId"],
              "type": "object",
              "properties":
                {
                  "memberSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                  "advisorSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                },
            },
          "multi-external-network-room-not-supported":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "multi.external.network.room.not.supported",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "multi external network rooms not supported",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Multi-External Network rooms are not supported.",
            },
          "multi-company-room-not-supported":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "format": "multi.company.room.not.supported",
                    },
                  "title":
                    {
                      "type": "string",
                      "format": "multi company rooms not supported",
                    },
                  "status": { "type": "integer", "format": "400" },
                },
              "description": "Multi-Company rooms are not supported.",
            },
          "member-already-in-room":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "member.already.in.room" },
                  "title":
                    { "type": "string", "format": "Member already in room." },
                  "status": { "type": "integer", "format": "409" },
                },
              "description": "Member already in room.",
            },
          "add-room-member-failed":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    { "type": "string", "format": "add.room.member.failed" },
                  "title":
                    {
                      "type": "string",
                      "format": "Unable to add the member to room.",
                    },
                  "status": { "type": "integer", "format": "500" },
                },
              "description": "Gateway microservice cannot create add the member to room.",
            },
          "bulk-room-member-multi-room-requestv2":
            {
              "type": "object",
              "properties":
                {
                  "requests":
                    {
                      "maxItems": 20,
                      "minItems": 1,
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/room-member-multi-room-requestv2",
                        },
                    },
                  "advisorSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "room-member-multi-room-requestv2":
            {
              "required": ["contact", "memberSymphonyId", "streamId"],
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "memberSymphonyId":
                    {
                      "type": "string",
                      "format": "number",
                      "example": 1234567890,
                    },
                },
            },
          "bulk-room-member-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "members":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/bulk-room-member-item-responsev2",
                        },
                    },
                },
            },
          "bulk-room-member-item-responsev2":
            {
              "type": "object",
              "properties":
                {
                  "status": { "type": "integer" },
                  "response":
                    { "$ref": "#/components/schemas/room-member-response" },
                  "error": { "$ref": "#/components/schemas/bulk-item-error" },
                },
            },
          "bulk-room-member-multi-room-request":
            {
              "type": "object",
              "properties":
                {
                  "requests":
                    {
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/room-member-multi-room-request",
                        },
                    },
                  "advisorEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "william.smith@symphony.com",
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                },
            },
          "room-member-multi-room-request":
            {
              "required": ["contact", "memberEmailAddress", "streamId"],
              "type": "object",
              "properties":
                {
                  "streamId":
                    {
                      "type": "string",
                      "example": "bjHSiY4iz3ar4iIh6-VzCX___peoM7cPdA",
                    },
                  "memberEmailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@symphony.com",
                    },
                  "contact": { "type": "boolean", "example": true },
                },
            },
          "bulk-room-member-response":
            {
              "type": "object",
              "properties":
                {
                  "members":
                    {
                      "type": "array",
                      "items":
                        {
                          "$ref": "#/components/schemas/bulk-room-member-item-response",
                        },
                    },
                },
            },
          "bulk-room-member-item-response":
            {
              "type": "object",
              "properties":
                {
                  "status": { "type": "integer" },
                  "response":
                    { "$ref": "#/components/schemas/room-member-response" },
                  "error": { "$ref": "#/components/schemas/bulk-item-error" },
                },
            },
          "rfc-error":
            {
              "type": "object",
              "properties":
                {
                  "type":
                    {
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n",
                      "format": "uri",
                      "example": "https://zalando.github.io/problem/constraint-violation",
                      "default": "about:blank",
                    },
                  "title":
                    {
                      "type": "string",
                      "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n",
                    },
                  "status":
                    {
                      "maximum": 600,
                      "exclusiveMaximum": true,
                      "minimum": 100,
                      "type": "integer",
                      "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n",
                      "format": "int32",
                      "example": 503,
                    },
                  "detail":
                    {
                      "type": "string",
                      "description": "A human readable explanation specific to this occurrence of the\nproblem.\n",
                      "example": "Connection to database timed out",
                    },
                  "instance":
                    {
                      "type": "string",
                      "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
                      "format": "uri",
                    },
                },
            },
          "companies-search-response":
            {
              "type": "object",
              "properties":
                {
                  "companies":
                    {
                      "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/company-response" },
                    },
                },
            },
          "company-response":
            {
              "type": "object",
              "properties":
                { "companyName": { "type": "string", "example": "symphony" } },
            },
          "pagination":
            {
              "title": "Pagination",
              "type": "object",
              "properties":
                {
                  "previous":
                    {
                      "type": "string",
                      "format": "uri",
                      "example": "?before=ewogICJlbWFpbEFkZHJlc3MiOiB7CiAgICAicyI6ICJtb2NrLnVzZXJAbW9jay5jb20iCiAgfQp9",
                    },
                  "next":
                    {
                      "type": "string",
                      "format": "uri",
                      "example": "?after=ewogICJlbWFpbEFkZHJlc3MiOiB7CiAgICAicyI6ICJtb2NrLnVzZXJAbW9jay5jb20iCiAgfQp9",
                    },
                  "cursors": { "$ref": "#/components/schemas/cursors" },
                },
            },
          "cursors":
            {
              "title": "Cursors",
              "type": "object",
              "properties":
                {
                  "before":
                    {
                      "type": "string",
                      "example": "ewogICJlbWFpbEFkZHJlc3MiOiB7CiAgICAicyI6ICJtb2NrLnVzZXJAbW9jay5jb20iCiAgfQp9",
                    },
                  "after":
                    {
                      "type": "string",
                      "example": "ewogICJlbWFpbEFkZHJlc3MiOiB7CiAgICAicyI6ICJtb2NrLnVzZXJAbW9jay5jb20iCiAgfQp9",
                    },
                },
            },
          "bulk-removal-status":
            { "type": "string", "enum": ["FAILURE", "SUCCESS"] },
          "bulk-removal-statusv2":
            { "type": "string", "enum": ["FAILURE", "SUCCESS", "NOT_FOUND"] },
          "bulk-item-error":
            {
              "type": "object",
              "properties":
                {
                  "itemId":
                    {
                      "type": "string",
                      "description": "Context dependent identifier of the item",
                    },
                  "type":
                    {
                      "type": "string",
                      "description": "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n",
                      "format": "uri",
                      "example": "https://zalando.github.io/problem/constraint-violation",
                      "default": "about:blank",
                    },
                  "title":
                    {
                      "type": "string",
                      "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n",
                    },
                  "statusCode":
                    {
                      "maximum": 600,
                      "exclusiveMaximum": true,
                      "minimum": 100,
                      "type": "integer",
                      "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n",
                      "format": "int32",
                      "example": 503,
                    },
                  "detail":
                    {
                      "type": "string",
                      "description": "A human readable explanation specific to this occurrence of the\nproblem.\n",
                      "example": "Connection to database timed out",
                    },
                  "instance":
                    {
                      "type": "string",
                      "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
                      "format": "uri",
                    },
                },
            },
          "contact-request":
            {
              "required":
                [
                  "companyName",
                  "emailAddress",
                  "externalNetwork",
                  "firstName",
                  "lastName",
                  "phoneNumber",
                ],
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "Doe" },
                  "companyName": { "type": "string", "example": "Company" },
                  "emailAddress":
                    {
                      "type": "string",
                      "format": "email",
                      "example": "johndoe@symphony.com",
                    },
                  "phoneNumber":
                    {
                      "type": "string",
                      "format": "phone",
                      "example": 911234567890,
                    },
                  "externalNetwork":
                    {
                      "description": "External network : WECHAT or WHATSAPP or SMS",
                      "type": "string",
                      "example": "WHATSAPP",
                    },
                  "advisorSymphonyIds":
                    {
                      "type": "array",
                      "description": "A list of Symphony user IDs of the advisors to add the contact to.",
                      "items":
                        {
                          "pattern": "^\\d+$",
                          "type": "number",
                          "example": 14362370637825,
                        },
                    },
                },
            },
          "update-contacts-request":
            {
              "required":
                [
                  "companyName",
                  "phoneNumber",
                  "externalNetwork",
                  "firstName",
                  "lastName",
                ],
              "type": "object",
              "properties":
                {
                  "firstName": { "type": "string", "example": "John" },
                  "lastName": { "type": "string", "example": "DoeABC" },
                  "companyName": { "type": "string", "example": "Company" },
                  "phoneNumber":
                    {
                      "type": "string",
                      "format": "phone",
                      "example": 911234567890,
                    },
                  "externalNetwork":
                    {
                      "type": "string",
                      "example": "WHATSAPP",
                      "description": "WHATSAPP",
                    },
                },
            },
          "inline_response_400":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/entitlement-user-already-exists-problem",
                  },
                  {
                    "$ref": "#/components/schemas/symphony-user-not-found-problem",
                  },
                  {
                    "$ref": "#/components/schemas/entitlement-type-not-found-problem",
                  },
                ],
            },
          "inline_response_404_1":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  { "$ref": "#/components/schemas/contact-not-found" },
                ],
            },
          "inline_response_404_2":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/tenant-configuration-not-found",
                  },
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  { "$ref": "#/components/schemas/permission-not-found" },
                ],
            },
          "inline_response_404_3":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  { "$ref": "#/components/schemas/permission-not-found" },
                ],
            },
          "inline_response_400_1":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/external-network-not-found" },
                  { "$ref": "#/components/schemas/invalid-user-info" },
                ],
            },
          "inline_response_403":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/forbidden-advisor" },
                  { "$ref": "#/components/schemas/forbidden-onboarder" },
                  { "$ref": "#/components/schemas/forbidden-entitlement-type" },
                ],
            },
          "inline_response_409":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/user-already-onboarded" },
                  { "$ref": "#/components/schemas/user-already-exists" },
                ],
            },
          "inline_response_409_1":
            {
              "oneOf":
                [{ "$ref": "#/components/schemas/user-already-onboarded" }],
            },
          "inline_response_403_1":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/forbidden-entitlement-type" },
                  {
                    "$ref": "#/components/schemas/update-forbidden-for-advisor",
                  },
                  {
                    "$ref": "#/components/schemas/multi-tenant-federated-user-update-attempt",
                  },
                ],
            },
          "inline_response_404_4":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/tenant-configuration-not-found",
                  },
                  { "$ref": "#/components/schemas/contact-not-found" },
                  { "$ref": "#/components/schemas/advisor-not-found" },
                ],
            },
          "inline_response_404_5":
            { "oneOf": [{ "$ref": "#/components/schemas/advisor-not-found" }] },
          "inline_response_401":
            { "oneOf": [{ "$ref": "#/components/schemas/Unauthorized" }] },
          "inline_response_403_0":
            { "oneOf": [{ "$ref": "#/components/schemas/Forbidden" }] },
          "inline_response_404_6":
            { "oneOf": [{ "$ref": "#/components/schemas/contact-not-found" }] },
          "inline_response_400_2":
            {
              "oneOf":
                [{ "$ref": "#/components/schemas/connection-not-accepted" }],
            },
          "inline_response_403_2":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/forbidden-advisor" },
                  { "$ref": "#/components/schemas/forbidden-entitlement-type" },
                ],
            },
          "inline_response_404_7":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/tenant-configuration-not-found",
                  },
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  {
                    "$ref": "#/components/schemas/federated-account-not-found",
                  },
                  { "$ref": "#/components/schemas/contact-not-found" },
                ],
            },
          "inline_response_500":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/create-room-failed" },
                  {
                    "$ref": "#/components/schemas/missing-connection-with-connect-bot",
                  },
                ],
            },
          "inline_response_403_3":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/forbidden-advisor" },
                  {
                    "$ref": "#/components/schemas/remove-room-member-forbidden",
                  },
                  { "$ref": "#/components/schemas/forbidden-entitlement-type" },
                ],
            },
          "inline_response_404_8":
            {
              "oneOf":
                [
                  { "$ref": "#/components/schemas/room-not-found" },
                  { "$ref": "#/components/schemas/room-member-not-found" },
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  {
                    "$ref": "#/components/schemas/tenant-configuration-not-found",
                  },
                ],
            },
          "inline_response_400_3":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/multi-external-network-room-not-supported",
                  },
                  {
                    "$ref": "#/components/schemas/multi-company-room-not-supported",
                  },
                ],
            },
          "inline_response_404_9":
            {
              "oneOf":
                [
                  {
                    "$ref": "#/components/schemas/tenant-configuration-not-found",
                  },
                  { "$ref": "#/components/schemas/advisor-not-found" },
                  { "$ref": "#/components/schemas/room-not-found" },
                ],
            },
        },
      "securitySchemes":
        {
          "sfsAuthentication":
            {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT",
              "description": "HTTP header",
            },
        },
    },
  "security": [{ "sfsAuthentication": [] }],
  "x-readme":
    {
      "explorer-enabled": true,
      "proxy-enabled": true,
      "samples-enabled": true,
    },
}
